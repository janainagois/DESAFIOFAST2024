---
- name: "Install Docker and initialize Docker Swarm"
  hosts: all
  become: true
  vars:
    ssh_key_path_default_user: /tmp/id_rsa.pub  
    ssh_path_private_key: /tmp/id_rsa           
  tasks:
    - name: "Add the user 'ansible' and add it to 'sudo'"
      ansible.builtin.user:
        name: 'ansible'
        group: 'sudo'
        
    - name: "Add the SSH private key for ansible"
      ansible.builtin.copy:
        content: "{{ lookup('env', 'SSH_PRIVATE_KEY') }}"
        dest: "{{ ssh_path_private_key }}"
        mode: '0600'

    - name: "Add the SSH public key for ansible"
      ansible.builtin.copy:
        content: "{{ lookup('env', 'SSH_PUBLIC_KEY') }}"
        dest: "{{ ssh_key_path_default_user }}"
        mode: '0644'

    - name: "Add SSH key to 'ansible'"
      ansible.builtin.authorized_key:
        user: 'ansible'
        state: 'present'
        key: "{{ lookup('file', ssh_key_path_default_user) }}"

    - name: "Add the SSH private key for ansible"
      ansible.builtin.copy:
        content: "{{ lookup('env', 'SSH_PRIVATE_KEY') }}"
        dest: "{{ ssh_path_private_key }}"
        mode: '0600'

    - name: "Wait for apt to unlock"
      become: true
      ansible.builtin.shell: |
        while sudo fuser /var/lib/dpkg/lock >/dev/null 2>&1; do
          sleep 5;
        done;

    - name: "Update APT package index"
      ansible.builtin.apt:
        update_cache: true

    - name: "Install required packages"
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
        state: 'present'

    - name: "Add Docker GPG key"
      ansible.builtin.apt_key:
        url: 'https://download.docker.com/linux/ubuntu/gpg'
        state: 'present'

    - name: "Add Docker repository"
      ansible.builtin.apt_repository:
        repo: 'deb https://download.docker.com/linux/ubuntu focal stable'
        state: 'present'

    - name: "Install Docker"
      ansible.builtin.apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
        state: 'present'

    - name: "Start and enable Docker service"
      ansible.builtin.systemd:
        name: 'docker'
        enabled: true
        state: 'started'

    - name: "Initialize Docker Swarm (on manager only)"
      ansible.builtin.shell: |
        docker swarm init --advertise-addr {{ ansible_default_ipv4.address }}
        docker swarm join-token worker -q > /tmp/swarm_worker_token
      when: is_manager

    - name: "Get Swarm join token (on manager)"
      ansible.builtin.command: 'cat /tmp/swarm_worker_token'
      register: worker_token
      when: is_manager

    - name: "Join Docker Swarm (on workers only)"
      ansible.builtin.shell: |
        docker swarm join --token {{ hostvars[groups['managers'][0]].worker_token.stdout }}
        {{ hostvars[groups['managers'][0]].ansible_default_ipv4.address }}:2377
      when: not is_manager
