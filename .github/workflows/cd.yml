name: fast-cd

on:
  workflow_dispatch:  # Permite executar o deploy manualmente pelo GitHub Actions
  push:
    tags:
      - 'v*.*.*'  # Executa o workflow quando uma tag de versão for criada (ex: v1.0.0)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3
  

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.9.7
       
      - name: Set up Google Cloud credentials
        run: echo "${{ secrets.GCP_CREDENTIALS }}" > /home/runner/credentials-google.json
        
      - name: Set GOOGLE_APPLICATION_CREDENTIALS
        run: |
          export GOOGLE_APPLICATION_CREDENTIALS="/home/runner/credentials-google.json"
        shell: bash
        env:
          GCP_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}

    
      - name: Terraform Init
        working-directory: ./terraform
        env:
          GOOGLE_APPLICATION_CREDENTIALS: "${{ secrets.GCP_CREDENTIALS }}"
        run: |
          echo $GOOGLE_APPLICATION_CREDENTIALS
          terraform init -get=true -upgrade -reconfigure

      - name:  Terraform Apply
        working-directory: ./terraform
        env:
          GOOGLE_APPLICATION_CREDENTIALS: "/home/runner/credentials-google.json"
        run: terraform apply -auto-approve -input=false

      - name: Setup SSH for Ansible
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run Ansible Playbook
        working-directory: ./ansible
        env:
          GOOGLE_APPLICATION_CREDENTIALS: "/home/runner/credentials-google.json"
        run: ansible-playbook -i playbooks/inventory playbooks/install_docker.yml
       
        
    
