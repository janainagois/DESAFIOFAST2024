name: fast-cd

on:
  workflow_dispatch:  # Permite executar o deploy manualmente pelo GitHub Actions
  push:
    tags:
      - 'v*.*.*'  # Executa o workflow quando uma tag de versão for criada (ex: v1.0.0)

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout código
        uses: actions/checkout@v3

      - name: Listar arquivos do diretório Terraform
        run: ls -la ./terraform

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2

      - name: Configurar credenciais Google
        env:
          GOOGLE_CREDENTIALS: ${{ secrets.GCP_CREDENTIALS }}
        run: |
          echo "${{ secrets.GCP_CREDENTIALS }}" > /tmp/google-credentials.json
          chmod 400 /tmp/google-credentials.json
          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/google-credentials.json"
          echo "GOOGLE_APPLICATION_CREDENTIALS is set to: /tmp/google-credentials.json"

      - name: Verificar o diretório e o conteúdo das credenciais
        run: |
          ls -la tmp
         
      - name: Verificar variável de ambiente
        run: |
          echo "GOOGLE_APPLICATION_CREDENTIALS: /tmp/google-credentials.json"
        
      - name: Terraform Init com Reconfigure
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/google-credentials.json
        run: terraform -chdir=./terraform init -reconfigure
       
      - name: Terraform Apply
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/google-credentials.json
        run: terraform -chdir=./terraform apply -auto-approve

      - name: Set up SSH for Ansible
        uses: webfactory/ssh-agent@v0.5.4
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Run Ansible Playbook
        env:
          GOOGLE_APPLICATION_CREDENTIALS: /tmp/google-credentials.json
        run: ansible-playbook -i inventory.yml playbook.yml

      
